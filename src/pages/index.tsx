import Head from 'next/head'
import { Inter } from 'next/font/google'
import Navbar from '@/components/HomePageComponents/Navbar'
import HomeComnponent from '@/components/HomePageComponents/Home'
import TrendingCoins from '@/components/CoinDetailPageComponents/TrendingCoins'
import React, { useState } from "react"
import Hero from '@/components/HomePageComponents/Hero'
import {
  Drawer,
  DrawerBody,
  DrawerHeader,
  DrawerOverlay,
  DrawerContent,
  DrawerCloseButton,
  useDisclosure
} from '@chakra-ui/react'
import { useSelector, useDispatch } from 'react-redux'
import { favouritesActions } from '@/ReduxStore/FavouritesSlice'
import { AiFillStar, AiOutlineStar } from 'react-icons/ai'
import { RxCrossCircled } from 'react-icons/rx'
import { useTheme } from '@/contexts/ThemeContext'


const inter = Inter({ subsets: ['latin'] })
export default function Home() {
  const { isDark } = useTheme();
  const { isOpen, onOpen, onClose } = useDisclosure();
  const reduxFavouritesARR: any[] = useSelector((state: any) => state.favourites.list);
  const dispatch = useDispatch();

  const removeFromFavHandler = (coin: any) => {
    dispatch(favouritesActions.removeFromFavourites(coin));
  };

  return (
    <>
      <Head>
        <title>Ctrack - Crypto Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="min-h-screen bg-gray-50 dark:bg-dark-bg transition-colors duration-300">
        <Navbar onFavoritesClick={onOpen} />
        <Hero />

        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
          <div className="space-y-12">
            <TrendingCoins />
          </div>
        </div>

        {/* Global Favourites Drawer */}
        <Drawer onClose={onClose} isOpen={isOpen} size="sm" placement="right">
          <DrawerOverlay bg="blackAlpha.300" onClick={onClose} />
          <DrawerContent
            bg={isDark ? "#1e293b" : "white"}
            color={isDark ? "white" : "black"}
            maxWidth="33vw"
            minWidth="400px"
          >
            <DrawerHeader borderBottomWidth="1px" borderColor={isDark ? "#334155" : "gray.200"}>
              <div className="flex items-center gap-3">
                <AiFillStar className="text-3xl text-yellow-500" />
                <span className="text-xl font-bold text-gray-900 dark:text-white">My Favourites</span>
              </div>
              <DrawerCloseButton />
            </DrawerHeader>
            <DrawerBody className="p-6">
              {reduxFavouritesARR.length === 0 ? (
                <div className="flex flex-col items-center justify-center py-16">
                  <AiOutlineStar className="text-6xl text-gray-300 dark:text-gray-600 mb-4" />
                  <p className="text-xl font-semibold text-gray-700 dark:text-gray-300 mb-2">
                    No Favourites Yet
                  </p>
                  <p className="text-gray-500 dark:text-gray-400 text-center">
                    Start adding cryptocurrencies to your favourites list
                  </p>
                </div>
              ) : (
                <div className="space-y-4">
                  {reduxFavouritesARR.map((item: any, index: number) => (
                    <div
                      key={item.id || index}
                      className="flex items-center justify-between p-4 bg-gray-50 dark:bg-dark-bg/50 rounded-xl border border-gray-200 dark:border-dark-border hover:shadow-md transition-all duration-200"
                    >
                      <div className="flex items-center space-x-4">
                        <img
                          src={item.image}
                          className="w-12 h-12 rounded-full"
                          alt={item.name || 'cryptocurrency'}
                          loading="lazy"
                        />
                        <div>
                          <p className="font-semibold text-gray-900 dark:text-white">
                            {item.name || item.id}
                          </p>
                          <p className="text-sm text-gray-500 dark:text-gray-400 uppercase">
                            {item.symbol}
                          </p>
                          <p className="text-sm font-semibold text-primary-600 dark:text-primary-400">
                            ${(item.current_price || item.price)?.toLocaleString()}
                          </p>
                        </div>
                      </div>
                      <button
                        onClick={() => removeFromFavHandler(item)}
                        className="p-2 text-red-500 hover:bg-red-50 dark:hover:bg-red-900/20 rounded-lg transition-colors"
                      >
                        <RxCrossCircled className="text-xl" />
                      </button>
                    </div>
                  ))}
                </div>
              )}
            </DrawerBody>
          </DrawerContent>
        </Drawer>
      </div>

    </>
  )
}
